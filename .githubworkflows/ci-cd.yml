name: HealthMed CI/CD Pipeline

on:
  push:
    branches:
      - main  # Executa o pipeline quando há push na branch main
  pull_request:
    branches:
      - main  # Executa o pipeline quando há um pull request para a branch main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # Passo 2: Configurar o ambiente .NET
      - name: Set up .NET 8.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # Passo 3: Restaurar dependências do projeto
      - name: Restore project dependencies
        run: dotnet restore

      # Passo 4: Build do projeto
      - name: Build HealthMed project
        run: dotnet build --no-restore

  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: build  # Depende do job de build
    if: github.ref == 'refs/heads/main'  # Executa apenas na branch main

    steps:
      # Passo 1: Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # Passo 2: Fazer login no Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Passo 3: Build da imagem Docker
      - name: Build Docker image
        run: docker build -t healthmed-app:latest .

      # Passo 4: Tag da imagem Docker
      - name: Tag Docker image
        run: |
          docker tag healthmed-app:latest ${{ secrets.DOCKER_HUB_USERNAME }}/healthmed-app:latest
          docker tag healthmed-app:latest ${{ secrets.DOCKER_HUB_USERNAME }}/healthmed-app:${{ github.sha }}

      # Passo 5: Publicar a imagem Docker no Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/healthmed-app:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/healthmed-app:${{ github.sha }}